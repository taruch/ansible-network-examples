---
- name: Configure Demo Environment CA Server
  hosts: ca-host
  gather_facts: false
  become: false

  vars:
    ansible_user: ec2-user
    ca_files: "{{ _ca_files | default('/opt/X509CA') }}"

  tasks:

    - name: Create a ca-server-admins group
      ansible.builtin.group:
        name: ca-server-admins
        state: present
      become: true

    - name: Create a CA Server user
      ansible.builtin.user:
        name: ca-admin
        groups: adm,ca-server-admins,wheel
        home: /home/ca-admin
        shell: /bin/bash
        state: present
        generate_ssh_key: true
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa
      become: true

    - name: Add existing user ec2-user to group
      ansible.builtin.user:
        name: 'ec2-user'
        groups: ca-server-admins
        append: true
      become: true

    - name: Copy ssh authorized_keys
      ansible.builtin.command: cp -a /home/ec2-user/.ssh/authorized_keys /home/ca-admin/.ssh/
      become: true

    - name: Fix permissions on linux files
      ansible.builtin.file:
        path: /home/ca-admin/.ssh/authorized_keys
        owner: ca-admin
        group: ca-admin
        mode: '0640'
      become: true

    - name: Create CA Directory on CA Server
      ansible.builtin.file:
        path: "{{ ca_files }}"
        state: directory
        mode: '0775'
        owner: ca-admin
        group: ca-server-admins
      become: true


    - name: "Allow admin users to sudo without a password"
      ansible.builtin.lineinfile:
        dest: "/etc/sudoers"
        state: "present"
        regexp: "^%wheel"
        line: "%wheel ALL=(ALL) NOPASSWD: ALL"
      become: true


    - name: Copy openssl.cfg file to CA Directory
      ansible.builtin.copy:
        src: ./files/openssl.cfg
        dest: "{{ ca_files }}"
        mode: '0660'
        owner: ca-admin
        group: ca-server-admins
      become: true

    - name: Copy openssl.cfg file to CA Directory
      ansible.builtin.copy:
        src: ./files/.rnd
        dest: "{{ ca_files }}"
        mode: '0660'
        owner: ca-admin
        group: ca-server-admins
      become: true

    - name: Create demoCA Directory on CA Server
      ansible.builtin.file:
        path: "{{ ca_files }}/demoCA"
        state: directory
        mode: '0770'
        owner: ca-admin
        group: ca-server-admins
      become: true

    - name: Create CA Certs Directory on CA Server
      ansible.builtin.file:
        path: "{{ ca_files }}/demoCA/certs"
        state: directory
        mode: '0770'
        owner: ca-admin
        group: ca-server-admins
      become: true

    - name: Create CA Private Key Directory on CA Server
      ansible.builtin.file:
        path: "{{ ca_files }}/demoCA/crl"
        state: directory
        mode: '0770'
        owner: ca-admin
        group: ca-server-admins
      become: true

    - name: Create newcerts CA Directory on CA Server
      ansible.builtin.file:
        path: "{{ ca_files }}/demoCA/newcerts"
        state: directory
        mode: '0770'
        owner: ca-admin
        group: ca-server-admins
      become: true

    - name: Create private CA Directory on CA Server
      ansible.builtin.file:
        path: "{{ ca_files }}/demoCA/private"
        state: directory
        mode: '0770'
        owner: ca-admin
        group: ca-server-admins
      become: true

    - name: Create index.txt file
      ansible.builtin.copy:
        content: ""
        dest: '{{ ca_files }}/demoCA/index.txt'
        mode: '0660'
        owner: ca-admin
        group: ca-server-admins
      become: true

    - name: Create index.txt.attr file
      ansible.builtin.copy:
        content: "unique_subject = no"
        dest: '{{ ca_files }}/demoCA/index.txt.attr'
        mode: '0660'
        owner: ca-admin
        group: ca-server-admins
      become: true

    - name: Create serial file
      ansible.builtin.copy:
        content: "01"
        dest: '{{ ca_files }}/demoCA/serial'
        mode: '0660'
        owner: ca-admin
        group: ca-server-admins
      become: true

    - name: Install pip
      ansible.builtin.dnf:
        name: python3-pip
        state: installed
      become: true

    - name: Install community python package on version 1.2.3
      vars:
        ansible_user: ca-admin
      ansible.builtin.pip:
        name:
          - cryptography>=1.2.3
          - pexpect

    - name: Create private key with password protection
      vars:
        ansible_user: ca-admin
      community.crypto.openssl_privatekey:
        path: "{{ ca_files }}/demoCA/private/cakey.pem"
        passphrase: "{{ ca_passphrase }}"
        cipher: auto
        size: 2048

    - name: Create certificate signing request (CSR) for CA certificate
      vars:
        ansible_user: ca-admin
      community.crypto.openssl_csr_pipe:
        privatekey_path: "{{ ca_files }}/demoCA/private/cakey.pem"
        privatekey_passphrase: "{{ ca_passphrase }}"
        common_name: Ansible CA
        use_common_name_for_san: false  # since we do not specify SANs, don't use CN as a SAN
        basic_constraints:
          - 'CA:TRUE'
        basic_constraints_critical: true
        key_usage:
          - keyCertSign
        key_usage_critical: true
      register: ca_csr

    - name: Create self-signed CA certificate from CSR
      vars:
        ansible_user: ca-admin
      community.crypto.x509_certificate:
        path: "{{ ca_files }}/cacert.pem"
        csr_content: "{{ ca_csr.csr }}"
        privatekey_path: "{{ ca_files }}/demoCA/private/cakey.pem"
        privatekey_passphrase: "{{ ca_passphrase }}"
        provider: selfsigned

...

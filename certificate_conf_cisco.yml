---
- name: Configure Certificate on IOS XE device
  hosts: rtr1
  gather_facts: false

  vars:
    domain_name: ansible.local
    cert_file: ./rtr2.p12
    ca_cert: "{{ lookup('file', './certificates/cacert.cer').splitlines() }}"
    trustpoint: test4


  tasks:
    - name: Backup Config
      tags:
        - backup
        - never
      cisco.ios.ios_config:
        backup: true

    - name: Configure hostname and domain name
      tags:
        - hostinfo
        - always
      cisco.ios.ios_system:
        hostname: "{{ inventory_hostname }}"
        domain_name: "{{ domain_name }}"
        name_servers:
          - 8.8.8.8
        domain_search:
          - "{{ domain_name }}"

    - name: Configure NTP
      tags:
        - never
        - ntp
      block:
        - name: Print out ntp configuration
          ansible.builtin.debug:
            msg: "{{ ntp_global }}"
            verbosity: 2

        - name: Combine host and group defined NTP configuration
          ansible.builtin.set_fact:
            device_ntp: "{{ ntp_global | combine(group_ntp_global | default({})) }}"

        - name: Update NTP Configuration
          cisco.ios.ios_ntp_global:
            config: "{{ device_ntp }}"
            state: replaced
          register: result

        - name: Print any NTP configuration changes
          ansible.builtin.debug:
            msg: "{{ result.commands }}"
      # End of NTP block tasks

    - name: Configure host key
      tags:
        - key_generation
        - never
      block:
        - name: Generate the RSA key
          cisco.ios.ios_config:
            lines: crypto key generate rsa modulus 4096 label my-4096rsa-key

        - name: Get the RSA key
          cisco.ios.ios_command:
            commands: show crypto key mypubkey rsa my-4096rsa-key
          register: my4096rsakey

        - name: Print the RSA key
          ansible.builtin.debug:
            msg: "{{ my4096rsakey.stdout_lines }}"
            verbosity: 2

    - name: Delete the Trustpoint on Switch
      tags:
        - trustpoint_delete
        - never
      ansible.netcommon.cli_command:
        command: "{{ item }}"
        # prompt: "Are you sure you want to do this? [yes/no]:"
        prompt: "this?"
        answer: "yes"
      loop:
        - conf t
        - no crypto pki trustpoint {{ trustpoint }}

    - name: Create TrustPoint on Switch
      tags:
        - trustpoint_create
        - never
      block:
        - name: Create the Trustpoint
          cisco.ios.ios_config:
            lines:
              - enrollment terminal pem
              - "subject-name C=US,ST=MD,L=Pasadena,O=Red Hat,OU=NAPS,CN={{ inventory_hostname }}.ansible.local"
              - "subject-alt-name {{ inventory_hostname }}.ansible.local"
              - serial-number none
              - ip-address none
              - revocation-check none
              - rsakeypair my-4096rsa-key
            parents: "crypto pki trustpoint {{ trustpoint }}"
          register: create_trustpoint_output

        - name: Debug output
          ansible.builtin.debug:
            var: create_trustpoint_output

        - name: Create the Trustpoint
          ansible.netcommon.cli_command:
            command: "crypto pki enroll {{ trustpoint }}"
            prompt:
              - Display Certificate Request to terminal? [yes/no]:
              - Redisplay enrollment request? [yes/no]:
            answer:
              - 'yes'
              - 'no'
          register: csr_output

        - name: Debug csr_output
          ansible.builtin.debug:
            var: csr_output
            verbosity: 2

        - name: Debug the Enrolled CSR
          ansible.builtin.set_fact:
            csr: "{{ (csr_output.stdout | split('\n\n'))[2] }}"

        - name: Debug output
          ansible.builtin.debug:
            var: csr
            verbosity: 2

        - name: Write CSR to file
          ansible.builtin.copy:
            content: "{{ csr }}"
            dest: "/tmp/{{ inventory_hostname }}.csr"
            owner: student
            group: student
            mode: '0644'
          delegate_to: ansible-1
          become: true


    - name: Add the CA Cert to the Trustpoint
      tags:
        - ca_cert_trustpoint
        - never
      block:
        - name: Create the template variable
          ansible.builtin.set_fact:
            cacert_var: "{{ lookup('ansible.builtin.template', './rtr_authenticate_CA.j2') | split('\n') }}"

        - name: Authenticate the trustpoint with the CA Cert
          ansible.netcommon.cli_command:
            command: "{{ item }}"
            sendonly: true
          loop: "{{ cacert_var }}"


    - name: Add the host Cert to the Trustpoint
      tags:
        - import_host_certificate
        - never
      block:
        - name: Slurp hosts file
          ansible.builtin.slurp:
            src: "/tmp/{{ inventory_hostname }}.cer"
          register: slurpfile
          delegate_to: ansible-1

        - name: Debug slurped file
          ansible.builtin.debug:
            msg: "{{ slurpfile['content'] | b64decode }}"
            verbosity: 2

        - name: Copy the host cert to EE
          ansible.builtin.set_fact:
            host_cert: "{{ (slurpfile['content'] | b64decode).splitlines() }}"

        - name: Create the template variable
          ansible.builtin.set_fact:
            host_cert_var: "{{ lookup('ansible.builtin.template', './rtr_import_certificate.j2') | split('\n') }}"

        - name: Import the host Certificate
          ansible.netcommon.cli_command:
            command: "{{ item }}"
            sendonly: true
          loop: "{{ host_cert_var }}"

...

    # Not working - Add the CA Cert to Trustpoint

        # - name: Set cacert variable
        #   ansible.builtin.set_fact:
        #     cacert: "{{ lookup('file', './certificates/cacert.cer') | regex_replace('\n', '\r') }}"
        #     #cacert: "{{ (lookup('file', './certificates/cacert.cer') | b64encode | regex_replace('(.{1,64})', '\1|')).split('|') | list + ['quit']}}"
        #     #cacert: "{{ (lookup('file', './certificates/cacert.cer')) }}"
        #     #cacert: "{{ (lookup('file', './certificates/cacert.cer') | split('\n')) | list + ['quit'] }}"

        # - name: debug
        #   ansible.builtin.debug:
        #     var: cacert

        # - name: Update the trustpoint
        #   ansible.netcommon.cli_command:
        #     command: "{{ item }}"
        #     #check_all: true
        #     #sendonly: true
        #     prompt:
        #       - "itself"
        #       - "certificate?"
        #     answer:
        #       - "{{ cacert }}"
        #       - "yes"
        #   loop:
        #     - conf t
        #     - crypto pki authenticate test4
        #     #- crypto pki authenticate {{ trustpoint }}"

        # - name: copy file to EE
        #   copy:
        #     src: ./cacert.cer
        #     dest: /tmp/cacert.cer
        #   #delegate_to: ansible-1

        # - name: Set cacert variable
        #   ansible.builtin.set_fact:
        #     cacert: "{{ lookup('file', '/tmp/cacert.cer') | split('\n') }}"

        # - name: Debug cacert variable
        #   ansible.builtin.debug:
        #     var: cacert

        # - name: Enroll the Trustpoint
        #   cisco.ios.ios_config:
        #     lines: "{{ lookup('file', './rtr2cert_commands.cfg') | regex_replace('\n', '') }}"
        #   register: csr_output

        # - name: Enroll the Trustpoint
        #   ansible.netcommon.cli_config:
        #     config: "{{ lookup('file', './rtr2cert_commands.cfg') }}"
        #     multiline_delimiter: '\r'
        #   register: csr_output

        # - name: Enroll the Trustpoint
        #   ansible.netcommon.cli_config:
        #     config: "{{ lookup('template', './rtr2cert_config.j2') }}"
        #   register: csr_output

        # - name: Set the certfile
        #   ansible.builtin.set_fact:
        #   set_fact:
        #     cert: >
        #       {{ (lookup('file', cert_file) | b64encode | regex_replace('(.{1,510})', '\1|')).split('|') | list }}

        # - name: Set the certfile
        #   ansible.builtin.set_fact:
        #     cert: >
        #       {{ (lookup('file', 'cacert.cer') | b64encode | regex_replace('(.{1,64})', '\1|')).split('|') | list + ['quit']}}

        # - name: Enroll the Trustpoint
        #   ansible.netcommon.cli_command:
        #     command: "crypto pki authenticate {{ trustpoint }}"
        #     prompt: End with a blank line or the word \"quit\" on a line by itself
        #     answer: "{{ cacert }}"
        #   register: csr_output

        # - name: Import A New CA Certificate Into The TrustPoint
        #   cisco.ios.ios_config:
        #     replace: block
        #     lines: "{{ cacert | b64encode }}"
        #     parents: "crypto pki authenticate {{ trustpoint }}"

        # - name: Enroll the Trustpoint
        #   ansible.netcommon.cli_config:
        #     config: "{{ item }}"
        #   loop: "{{ lookup('template', './rtr2cert_config.j2') | split('\n') }}"
        #   register: csr_output

        # - name: copy file from EE to a network device
        #   ansible.netcommon.net_put:
        #     #src: ./cacert.cer
        #     src: "/tmp/cacert.cer"
        #     #protocol: sftp
        #     dest: "flash:/cacert.cer"
        #   vars:
        #     ansible_command_timeout: 600
        #    # crypto pki import thetrustpoint pem url
        # - name: Update the trustpoint
        #   ansible.netcommon.cli_command:
        #     command: "crypto pki authenticate {{ trustpoint }}"
        #     prompt:
        #       - 'End with a blank line or the word "quit" on a line by iteself'
        #     answer: "{{ cacert }}"

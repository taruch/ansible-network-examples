---
- name: Check Certificates on JunOS device
  hosts: cisco
  gather_facts: false

  vars:
    trustpoint: aaptest1

  tasks:

    - name: Configure ca-profile

    - name: Check for TrustPoint on Host
      tags:
        - check_for_certificate
        - never
      block:
        - name: Get certificates from host
          ansible.netcommon.cli_command:
            command: "sho crypto pki certificates {{ trustpoint }}"
          register: certificates

        - name: Fail when hostname not in certificates
          ansible.builtin.fail:
            msg: The system may not be provisioned with the certificate
          when: inventory_hostname not in certificates.stdout

    - name: Check Certificate Date on Host
      tags:
        - check_certificate_date
        - never
      # ec2-user@rtr3> show security pki ca-certificate ca-profile CACERT 
      # LSYS: root-logical-system
      #   CA profile: CACERT
      # Certificate identifier: CACERT
      #   Issued to: Todd Ruch, Issued by: C = US, O = Red Hat, CN = Todd Ruch
      #   Validity:
      #     Not before: 06-29-2023 15:16 UTC
      #     Not after: 06-28-2024 15:16 UTC
      #   Public key algorithm: rsaEncryption(2048 bits)
      #   Keypair Location: Keypair generated locally
      # ec2-user@rtr3> show security pki local-certificate certificate-id rtr3 
      # LSYS: root-logical-system
      # Certificate identifier: rtr3
      #   Issued to: rtr3.ansible.local, Issued by: C = US, O = Red Hat, CN = Todd Ruch
      #   Validity:
      #     Not before: 03-14-2024 21:14 UTC
      #     Not after: 03-14-2025 21:14 UTC
      #   Public key algorithm: rsaEncryption(2048 bits)
      #   Keypair Location: Keypair generated locally
      block:
        - name: Get certificates from host
          ansible.netcommon.cli_command:
            command: "sho crypto pki certificates {{ trustpoint }}"
          register: certificates

        - name: Fail when hostname not in certificates
          ansible.builtin.fail:
            msg: The system may not be provisioned with a certificate
          when: inventory_hostname not in certificates.stdout

        - name: Debug Fact
          ansible.builtin.debug:
            msg: "{{ certificates }}"
            verbosity: 3

        - name: "Parse CLI Output from show crypto pki certificates"
          vars:
            template: "/usr/local/lib/python3.9/site-packages/ntc_templates/templates/cisco_ios_show_crypto_pki_certificates.textfsm"
          ansible.builtin.set_fact:
            certs_parsed: "{{ certificates.stdout | parse_cli_textfsm(template) }}"

        - name: Get System Time
          ansible.builtin.command:
            cmd: 'date -u +"%H:%M:%S UTC %b %d %Y"'
          changed_when: false
          register: current_date
          delegate_to: ansible-1

        - name: Debug Days left on certificate
          ansible.builtin.debug:
            msg: "{{ (((item.END_DATE | to_datetime('%X UTC %b %d %Y')) - (current_date.stdout | to_datetime('%X UTC %b %d %Y'))).days) }}"
          when:
            - item.CERTIFICATE_TYPE == "Certificate"
          loop: "{{ certs_parsed }}"

        - name: Fail when certificate needs to be updated
          ansible.builtin.fail:
            msg: The certificate needs to be updated
          when:
            - item.CERTIFICATE_TYPE == "Certificate"
            - (((item.END_DATE | to_datetime('%X UTC %b %d %Y')) - (current_date.stdout | to_datetime('%X UTC %b %d %Y'))).days) < 10
          loop: "{{ certs_parsed }}"

...
